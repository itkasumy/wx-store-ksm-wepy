<template>
  <view class="goodsList">
    <repeat for="{{list}}" key="index" index="index" item="item">
      <view class="list_box">
        <swiperDelete :swiperData="item" @delItem.user="handleDelItem">
          <view class="goods-info">
            <icon
              class="icon_check"
              type="success"
              color="{{item.ischecked ? 'red' : 'rgb(153, 153, 153)'}}"
              @tap.stop="selectTap"
              data-index="{{index}}"
              data-id="{{item.id}}"
              size="20"
            ></icon>

            <view class="img-box">
              <image src="{{item.thumbLogo}}" class="img"></image>
            </view>

            <view class="text-box">
              <view class="goods-title">
                <navigator url="/pages/goods_detail?id={{item.goodsId}}">{{item.goodsName}}</navigator>
              </view>

              <view class="lable">
                <view class="goods-lable">{{item.goodsSkuValValName}}</view>
                <view class="bo-label" wx:if="{{item.type === 2}}">补货</view>
              </view>

              <view class="goods-price">￥{{item.price}}</view>

              <view class="buy-num">
                <view
                  class="jian-btn {{item.num === 1 ? 'disabled' : ''}}"
                  catchtap="jianBtnTap"
                  data-index="{{index}}"
                  data-id="{{item.id}}"
                >-</view>
                <input type="number" value="{{item.num}}" disabled />
                <view
                  class="jia-btn {{item.num === 1000 ? 'disabled' : ''}}"
                  catchtap="jiaBtnTap"
                  data-index="{{index}}"
                  data-id="{{item.id}}"
                >+</view>
              </view>
            </view>
          </view>
        </swiperDelete>
      </view>
    </repeat>
  </view>

  <view class="empty_cart" wx:if="{{list.length === 0}}">
    <image src="../images/empty_cart.png" class="empty_cart_img"></image>
    <view class="empty_cart_text">购物车还是空的</view>
    <view class="shop_btn">
      <view class="block btn_group">
        <view class="btn get_store" @tap="goIndex">去逛逛</view>
      </view>
    </view>
  </view>

  <view class="jiesuan_box" wx:if="{{list.length > 0}}">
    <view class="left-price">
      <view @tap.stop="selectAll" class="all_select_box">
        <icon
          type="success"
          size="20"
          color="{{allChecked ? 'red' : 'rgb(153, 153, 153)'}}"
        ></icon>
        <view class="all_select">全选</view>
      </view>
      <view class="total" hidden="{{noSelect}}">合计: ￥{{totalPrice}}</view>
    </view>
    <view class="to-pay-btn {{noSelect ? 'no-select' : ''}}" hidden="{{!saveHidden}}" bindtap="toPayOrder">去结算</view>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '../api'
import tip from '../utils/tip'
import { USER_SPECICAL_INFO } from '../utils/constant'
import swiperDelete from './common/wepy-swipe-delete'

export default class shopCart extends wepy.component {
  components = {
    swiperDelete
  }

  data = {
    list: [],
    noSelect: false,
    saveHidden: true,
    totalPrice: 0,
    operating: false,
    allChecked: true
  }

  onLoad () {
    this.operating = false
  }

  async getCartList () {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    const json = await api.cartList({
      query: {
        openId: openId
      }
    })

    console.log(json)

    if (this.data.code === '0') {
      const data = json.data
      this.list = data.list
      this.totalPrice = data.totalPrice
      for (let i = 0; i < this.list.length; i++) {
        if (!this.list[i].ischecked) {
          this.allChecked = false
          break
        }
      }
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async checkGoods (id, index, ischecked) {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    const json = await api.cartCheck({
      query: {
        openId: openId,
        id: id
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      // 购物车数据
      this.list[index].ischecked = !ischecked
      if (this.list[index].ischecked) {
        this.totalPrice += parseInt(this.list[index].priceSubtotal)
      } else {
        this.totalPrice -= parseInt(this.list[index].priceSubtotal)
      }
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async reduceGoodNum (id, num, index) {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    const json = await api.cartUpdateNum({
      query: {
        openId: openId,
        id: id,
        num: num
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      this.list[index].num = num
      this.totalPrice = this.totalPrice - this.list[index].price
      this.operating = false
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async addGoodNum (id, num, index) {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    const json = await api.cartUpdateNum({
      query: {
        openId: openId,
        id: id,
        num: num
      }
    })

    // console.log(josn)

    if (json.data.code === '0') {
      this.list[index].num = num
      this.totalPrice = parseInt(this.totalPrice) + parseInt(this.list[index].price)
      this.operating = false
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async deleteGoods (itemData) {
    const id = itemData.id
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    const json = await api.cartDel({
      query: {
        openId: openId,
        cartIdList: [id]
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      const retList = []
      for (let i = 0; i < this.list.length; i++) {
        if (this.list[i].id === id) {
          if (this.list[i].ischecked) {
            this.totalPrice -= parseInt(this.list[i].priceSubtotal)
          }
          continue
        } else {
          retList.push(this.list[i])
        }
      }
      this.list = retList
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async checkAllGoods () {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    const openId = userSpecialInfo.openid
    let check = 0
    if (!this.allChecked) {
      check = 1
    }
    const json = await api.cartCheckAll({
      query: {
        openId: openId,
        check: check
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      this.totalPrice = 0
      for (let i = 0; i < this.list.length; i++) {
        this.list[i].ischecked = !this.allChecked
        if (!this.allChecked) {
          this.totalPrice += parseInt(this.list[i].priceSubtotal)
        }
      }
      this.allChecked = !this.allChecked
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  methods = {
    handleDelItem () {
      this.deleteGoods(item)
    },

    selectTap (e) {
      const id = e.currentTarget.dataset.id
      const index = parseInt(e.currentTarget.dataset.index)
      const ischecked = this.list[index].ischecked
      this.checkGoods(id, index, ischecked)
    },

    selectAll () {
      this.checkAllGoods()
    },

    getCartListMethod () {
      this.getCartList()
    },

    jianBtnTap () {
      if (this.operating) {
        return
      }
      this.operating = true
      const id = e.currentTarget.dataset.id
      const index = parseInt(e.currentTarget.dataset.index)
      let num = this.list[index].num
      if (num > 1) {
        num--
      } else {
        return
      }
      this.reduceGoodNum(id, num, index)
    },

    jiaBtnTap () {
      if (this.operating) {
        return
      }
      this.operating = true
      const id = e.currentTarget.dataset.id
      const index = parseInt(e.currentTarget.dataset.index)
      let num = this.list[index].num
      num++
      this.addGoodNum(id, num, index)
    },

    toPayOrder () {
      let purType = 1
      let prePurType = 1
      let bOneType = true
      let index = 0
      for (let i = 0; i < this.list.length; i++) {
        if (this.list[i].ischecked) {
          purType = this.list[i].type
          if (index > 0) {
            if (purType !== prePurType) {
              bOneType = false
              break
            }
          }
          prePurType = purType
          index++
        }
      }
      if (!bOneType) {
        tip.alert('先把补货的商品结算！')
        return
      }
      wepy.navigateTo({
        url: '/pages/fomfire_order?purchasetype=' + purType
      })
    },

    goIndex () {
      wepy.switchTab({
        url: '/pages/home'
      })
    }
  }
}
</script>

<style lang="less">
  .goods-info {
    border-bottom: 1px solid #eee;
    display: flex;
    justify-content: space-between;
    padding: 70rpx 0 30rpx 0;
    box-sizing: border-box;
    align-items: center;
    position: relative;
    .icon_check {
      position: absolute;
      width: 100%;
      height: 165rpx;
      line-height: 165rpx;
    }
    .img-box {
      width: 160rpx;
      height: 160rpx;
      overflow: hidden;
      margin-right: 20rpx;
      bottom: #d8d8d8;
      margin-left: 100rpx;
    }
    .text-box {
      width: 440rpx;
      position: relative;
    }
    .text-box .goods-title {
      font-size: 28rpx;
      color: #000000;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      padding: 10rpx 20rpx 5rpx 0;
    }
    .text-box .label {
      font-size: 26rpx;
      color: #999999;
      height: 38rpx;
      line-height: 38rpx;
      margin: 8rpx 0 25rpx 0;
    }
    .lable {
      display: flex;
      align-items: center;
      .goods-label {
        font-size: 26rpx;
      }
      .goods-lable {
        font-size: 26rpx;
      }
      .bo-label {
        font-size: 24rpx;
        background: #e64340;
        padding: 2rpx 10rpx;
        color: #ffffff;
        border-radius: 2rpx;
        margin-left: 10rpx;
      }
    }
    .text-box .goods-price {
      font-size: 26rpx;
      color: #e64340;
    }
    .text-box .buy-num {
      width: 164rpx;
      height: 48rpx;
      line-height: 48rpx;
      position: absolute;
      right: 30rpx;
      bottom: 0;
      display: flex;
      font-size: 24rpx;
      text-align: center;
    }
    .text-box .buy-num .jian-btn {
      width: 48rpx;
      height: 100%;
      border-left: 1px solid #eee;
      border-bottom: 1px solid #eee;
      border-top: 1px solid #eee;
      border-bottom-left-radius: 6rpx;
      border-top-left-radius: 6rpx;
    }
    .text-box .buy-num .jian-btn.disabled {
      background: #f5f5f9;
      border-left: 1px solid #eee;
      border-bottom: 1px solid #eee;
      border-top: 1px solid #eee;
      color: #cccccc;
    }
    .text-box .buy-num .jia-btn {
      width: 48rpx;
      height: 100%;
      border-left: 1px solid #eee;
      border-bottom: 1px solid #eee;
      border-top: 1px solid #eee;
      border-bottom-left-radius: 6rpx;
      border-top-left-radius: 6rpx;
    }
    .text-box .buy-num .jia-btn.disabled {
      background: #f5f5f9;
      border-left: 1px solid #eee;
      border-bottom: 1px solid #eee;
      border-top: 1px solid #eee;
      color: #cccccc;
    }
    .text-box .buy-num input {
      width: 68rpx;
      height: 48rpx;
      min-height: 48rpx;
      text-align: center;
      border: 1px solid #ccc;
      font-size: 24rpx;
    }
    .img-box .img {
      width: 160rpx;
      height: 160rpx;
    }
  }

  .jiesuan_box {
    display: flex;
    justify-content: space-between;
    width: 100%;
    height: 100rpx;
    position: fixed;
    bottom: 0;
    left: 0;
    border-bottom: 1px solid #eee;
    border-top: 1px solid #eee;
    background: #ffffff;
    z-index: 9999;
  }

  .jiesuan_box .to-pay-btn {
    width: 240rpx;
    text-align: center;
    line-height: 100rpx;
    background: #e64340;
    color: #ffffff;
    font-size: 32rpx;
  }

  .jiesuan_box .to-pay-btn.no-select {
    background: #cccccc;
  }

  .jiesuan_box .left-price {
    display: flex;
    width: 510rpx;
    justify-content: space-between;
    padding: 0 30rpx 0 20rpx;
    font-size: 28rpx;
    box-sizing: border-box;
    align-items: center;
  }

  .jiesuan_box .total {
     color: #e64340;
  }

  .list_box {
    height: 250rpx;
  }

  .all_select_box {
    width: 200rpx;
    height: 100%;
    display: flex;
    align-items: center;
  }

  .all_select {
    flex: 1;
    padding-left: 10rpx;
  }

  .empty_cart {
    margin-top: 100rpx;
    .shop_btn {
      display: flex;
      width: 100%;
    }
    .block {
      margin: 0 auto;
      text-align: center;
      display: flex;
      align-items: center;
    }
    .btn_group {
      display: flex;
      align-items: center;
      padding-top: 100rpx;
      .btn {
        font-size: 30rpx;
        padding: 22rpx 55rpx;
        text-align: center;
        margin: 0 auto;
        width: 100%;
        -moz-border-radius: 10rpx;
        -webkit-border-radius: 10rpx;
        border-radius: 10rpx;
      }
      .get_store {
        background: #ed601b;
        color: #ffffff;
        margin-left: 1px;
      }
    }
  }

  .empty_cart_img {
    width: 220rpx;
    height: 177rpx;
    display: block;
    margin: 0 auto;
  }

  .empty_cart_text {
    font-size: 32rpx;
    color: #999999;
    margin-top: 20rpx;
    text-align: center;
  }
</style>
