<template>
  <view class="address">
    <repeat for="{{addressList}}" key="index" index="index" item="item">
      <view class="list_box">
        <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
          <view class="address_list" @tap="tapSelAddress" data-id="{{item.id}}">
            <view class="title">
              <view class="user_info">
                <text class="name">{{item.receiverName}}</text>
                <text class="phone">{{item.mobile}}</text>
              </view>

              <view class="active_address">
                <text class="default" wx:if="{{item.isDef === 1}}">[默认]</text>
                {{item.provinceName}} {{item.cityName}} {{item.areaName}} {{item.adressDetail}}
              </view>
            </view>

            <view class="arrow" @tap.stop="edit" data-id="{{item.id}}">
              <i class="iconfont icon-edit"></i>
            </view>
          </view>
        </swipeDelete>
      </view>
    </repeat>
  </view>

  <view class="add_wrap">
    <view class="button type_red" @tap="add">新增地址</view>
  </view>
</template>

<script>
import wepy from 'wepy'
import tip from '../utils/tip'
import SwipeDelete from './common/wepy-swipe-delete'
import api from '../api'
import { ADDRESS_ID } from '../utils/constant'

export default class AddressList extends wepy.component {
  props = {
    addressList: {
      type: Object,
      default: [
        {
          style: 0
        },
        {
          style: 0
        }
      ]
    }
  }

  components = {
    swipeDelete: SwipeDelete
  }

  data = {
    receiverInfo: {},
    type: ''
  }

  async delUserAddress (id) {
    const json = api.delUserAddress({
      query: {
        id: id,
        type: 2
      }
    })

    // console.log(json)

    if (json.data.code === 0) {
      this.$emit('currentPage', 0)
      this.$emit('refreshAddList', 'hehe')
    } else {
      // tip.error(json.data.msg)
      tip.error('json.data.msg')
    }

    that.showLoading = false
  }

  methods = {
    add () {
      this.$emit('currentPage', 1)
    },

    edit (e) {
      const id = e.currentTarget.dataset.id
      this.$emit('currentPage', 2, id)
    },

    handleDelItem (itemData) {
      this.delUserAddress(itemData.id)
    },

    refreshList (val) {
      if (val === undefined) {
        return
      }

      this.addressList = val
      this.$apply()
    },

    setOrgType (type) {
      this.type = type
    },

    tapSelAddress (e) {
      if (this.type !== 'order') {
        return
      }

      const id = e.currentTarget.dataset.id
      wepy.setStorageSync(ADDRESS_ID, id)
      wepy.redirectTo({
        url: '/pages/comfire_order?from=selAdd'
      })
    }
  }
}
</script>

<style lang="less">
  .list_box {
    height: 150rpx;
  }

  .address {
    .list_box:last-child {
      border-bottom: 1px solid #efefef;
    }
    .address_list {
      display: flex;
      justify-content: space-between;
      height: 150rpx;
      align-items: center;
      padding: 0 0 0 35rpx;
      border-top: 1px solid #efefef;
      .title {
        color: #000000;
      }
      .arrow {
        width: 150rpx;
        height: 150rpx;
        line-height: 150rpx;
        text-align: center;
        color: #9a9a9a;
      }
      .user_info {
        color: #1a1a1a;
      }
      .active_address {
        margin-top: 20rpx;
      }
      .default {
        color: #ea4a3a;
      }
    }
  }

  .add_wrap {
    display: block;
    width: 95%;
    left: 0;
    right: 0;
    position: absolute;
    bottom: 20rpx;
    margin: 0 auto;
  }
</style>
