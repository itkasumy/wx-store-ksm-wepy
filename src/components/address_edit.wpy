<template>
  <form bindsubmit="formSubmit">
    <view class="block">
      <view class="list_item">
        <view class="title">收货人姓名：</view>
        <view class="input">
          <input type="text" name="receiverName" value="{{editInfo.receiverName}}" />
        </view>
      </view>

      <view class="list_item">
        <view class="title">联系电话：</view>
        <view class="input">
          <input type="text" name="mobile" value="{{editInfo.mobile}}" />
        </view>
      </view>

      <view class="list_item">
        <view class="title">所在地区：</view>
        <view class="input">
          <view @tap="openAddressPicker">
            {{province ? province.name : '省'}} - {{city ? city.name : '市'}} - {{area ? area.name : '区'}}
          </view>
          <areaPicker @areaArray.user="areaPickerArray"></areaPicker>
        </view>
      </view>

      <view class="list_item">
        <view class="title">详细地址：</view>
        <view class="input">
          <input type="text" name="addressDetail" value="{{editInfo.addressDetail}}" />
        </view>
      </view>

      <view class="list_item">
        <view class="title">设置默认地址：</view>
        <view class="input tr" @tap="changeCheckBoxState">
          <icon type="success" size="20" color="{{isDefault ? 'red' : '#999'}}"></icon>
        </view>
      </view>
    </view>

    <view class="btn_box">
      <button class="button type_red" formType="submit">修改</button>
    </view>
  </form>
</template>

<script>
import wepy from 'wepy'
import tip from '../utils/tip'
import AreaPicker from './common/wepy-area-picker'
import api from '../api'
import { USER_SPECICAL_INFO } from '../utils/constant'

export default class AddressEdit extends wepy.component {
  data = {
    isDefault: false,
    province: '',
    city: '',
    area: '',
    provinceCode: '',
    cityCode: '',
    areaCode: '',
    isCheck: false,
    editInfo: {
      type: Object,
      default: {}
    },
    id: ''
  }

  components = {
    areaPicker: AreaPicker
  }

  async editAddress (address) {
    const that = this
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    let isDefault = 0
    if (this.isDefault) {
      isDefault = 1
    }
    const openId = userSpecialInfo.openid
    const json = await api.saveAddress({
      query: {
        openId: openId,
        id: that.id,
        address: address,
        isDef: isDefault,
        province: that.provinceCode,
        city: that.cityCode,
        area: that.areaCode
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      // 0 列表 1 新增 2 编辑（显示列表）
      that.$emit('currentPage', 0)
      that.$emit('refreshAddList', 'hehe')
    } else {
      // tip.error(json.data.msg)
      tip.error('json.data.msg')
    }

    this.showLoading = false
  }

  methods = {
    changeCheckBoxState () {
      this.isDefault = !this.isDefault
      this.isCheck = !this.isCheck
    },

    formSubmit (e) {
      const receiverName = e.detail.value.receiverName
      const mobile = e.detail.value.mobile
      const addressDetail = e.detail.value.addressDetail

      if (receiverName === '') {
        tip.alert('输入收件人姓名')
        return
      }
      if (mobile === '') {
        tip.alert('输入联系电话')
        return
      }
      if (addressDetail === '') {
        tip.alert('输入详细地址')
        return
      }

      this.editAddress(e.detail.value)
    },

    refresh (val) {
      if (val === undefined) {
        return
      }

      this.editInfo = val
      this.id = this.editInfo.id

      if (this.editInfo.isDef === 1) {
        this.isDefault = true
      }

      this.province = {
        code: this.editInfo.provinceCode,
        name: this.editInfo.provnceName
      }

      this.city = {
        code: this.editInfo.cityCode,
        name: this.editInfo.cityName
      }

      this.area = {
        code: this.editInfo.areaCode,
        name: this.editInfo.areaName
      }

      this.$apply()
    },

    openAddressPicker () {
      this.$invoke('areaPicker', 'openAddressPicker')
    },

    areaPickerArray (province, city, area) {
      this.province = province
      this.city = city
      this.area = area

      this.provinceCode = province.code
      this.cityCode = city.code
      this.areaCode = area.areaCode

      this.$apply()
    }
  }

  onShow () {
    this.province = {
      code: '120000',
      name: '天津市'
    }

    this.city = {
      code: '120100',
      name: '天津市'
    }

    this.area = {
      code: '120101',
      name: '和平区'
    }

    this.$invoke('areaPicker', 'setAddressPickerValue', this.province, this.city, this.area)
  }
}
</script>

<style lang="less">
  .block {
    background: #ffffff;
  }

  .list_item {
    display: flex;
    align-items: center;
    padding: 35rpx 20rpx;
    border-top: 1px solid #efefef;
    .title {
      margin-right: 20rpx;
    }
    .input {
      flex: 1;
      input {
        color: #333;
      }
    }
  }

  .btn_box {
    margin-top: 64rpx;
    padding: 0 24rpx;
  }
</style>
