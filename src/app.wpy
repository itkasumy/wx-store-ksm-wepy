<style lang="less">
@import './stylus/base';
@import './stylus/icon';
@import './stylus/style';
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

// import { setStore } from 'wepy-redux'
// import configStore from './store'

// const store = configStore()
// setStore(store)

import { USER_SPECICAL_INFO, USER_INFO, SYSTEM_INFO } from './utils/constant'
import { wxJsCode2Session } from './api'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home',
      'pages/home_detail',
      'pages/goods_detail',
      'pages/classify',
      'pages/shop_cart',
      'pages/info',
      'pages/search',
      'pages/sign_in',
      'pages/exchange_goods',
      'pages/wholesale',
      'pages/replenishment_goods',
      'pages/register',
      'pages/order',
      'pages/reorder',
      'pages/points',
      'pages/points_rule',
      'pages/points_more',
      'pages/collection'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      backgroundColor: '#efefef'
    },
    'tabBar': {
      'color': '#999',
      'selectedColor': '#ff6a3c',
      'backgroundColor': '#fff',
      'borderStyle': 'black',
      'list': [
        {
          'pagePath': 'pages/home',
          'text': '首页',
          'iconPath': 'images/icon_home.png',
          'selectedIconPath': 'images/icon_home_active.png'
        },
        {
          'pagePath': 'pages/classify',
          'text': '分类',
          'iconPath': 'images/icon_classify.png',
          'selectedIconPath': 'images/icon_classify_active.png'
        },
        {
          'pagePath': 'pages/shop_cart',
          'text': '购物车',
          'iconPath': 'images/icon_shop_cart.png',
          'selectedIconPath': 'images/icon_shop_cart_active.png'
        },
        {
          'pagePath': 'pages/info',
          'text': '我的',
          'iconPath': 'images/icon_info.png',
          'selectedIconPath': 'images/icon_info_active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null,
    appid: 'wx66ec9b44891facbd',
    secret: '903ac5edac934341d4b593413fe66622'
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async onLaunch () {
    // this.testAsync()
    // const that = this
    // 用户信息
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
    // 用户普通信息
    let userInfo = wepy.getStorageSync(USER_INFO) || {}

    // 如果信息过期
    if ((!userSpecialInfo.openid || (userSpecialInfo.expires_in || Date.now()) < (Date.now() + 600)) && !userInfo.nickName) {
      let res = await wepy.login()
      // console.log(res)
      if (res.code) {
        // let d = that.globalData // 这里存储了 appid secret token
        // 存储 userInfo
        let c = await wepy.getUserInfo()
        console.log(c)
        wepy.setStorageSync(USER_INFO, c.userInfo)

        // 存储系统信息
        let systemInfo = await wepy.getSystemInfoSync()
        // console.log(systemInfo)
        wepy.setStorageSync(SYSTEM_INFO, systemInfo)

        wxJsCode2Session({
          query: {
            jsCode: res.code,
            nickName: c.userInfo.nickName
          }
        }).then(resp => {
          const rlt = resp.data
          console.log(rlt)
          // console.log('wxJsCode2Session...', JSON.stringify(rlt))
          if (rlt.result) {
            const data = rlt.data
            if (data.openid) {
              const obj = {}
              obj.openid = data.openid
              obj.expires_in = Date.now() + data.expires_in
              // 存储 openid
              wepy.setStorageSync(USER_SPECICAL_INFO, obj)
            }
          } else {
            const obj = {}
            obj.openid = 'o5gAf5Q1Ki26d2zHaLRyt1_hIBAE'
            obj.expires_in = '7200'
            // 存储 openid
            wepy.setStorageSync(USER_SPECICAL_INFO, obj)
          }
        })

        // let url = 'https://api.weixin.qq.com/sns/jscode2session?appid=' + d.appid + '&secret=' + d.secret + '&js_code=' + res.code + '&grant_type=authorization_code'

        // const b = await wepy.request({
        //   url: url,
        //   data: {},
        //   method: 'POST',
        //   header: {
        //     'Content-Type': 'application/x-www-form-urlencoded'
        //   }
        // })

        // if (b.data.openid) {
        //   let obj = {}
        //   obj.openid = b.data.openid
        //   obj.expires_in = Date.now() + b.data.expires_in

        //   wepy.setStorageSync(USER_SPECICAL_INFO, obj)

        //   let e = await wepy.getUserInfo()
        //   wepy.setStorageSync(USER_SPECICAL_INFO, e.userInfo)

        //   let systemInfo = await wepy.getSystemInfoSync()
        //   wepy.setStorageSync(SYSTEM_INFO, systemInfo)

        //   console.log('success')
        // }
      } else {
        console.log('获取用户登录状态失败！' + res.errMsg)
      }
    }
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
