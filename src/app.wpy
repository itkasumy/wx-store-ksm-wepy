<style lang="less">
@import './stylus/base';
@import './stylus/icon';
@import './stylus/style';
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

// import { setStore } from 'wepy-redux'
// import configStore from './store'

// const store = configStore()
// setStore(store)

// import { USER_SPECICAL_INFO, USER_INFO, SYSTEM_INFO, ADDRESS_ID, SEL_CLASS_CODE } from './utils/constant'
// import { wxJsCode2Session, user2session } from './api'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      backgroundColor: '#efefef'
    },
    'tabBar': {
      'color': '#999',
      'selectedColor': '#ff6a3c',
      'backgroundColor': '#fff',
      'borderStyle': 'black',
      'list': [
        {
          'pagePath': 'pages/home',
          'text': '首页',
          'iconPath': 'images/icon_home.png',
          'selectedIconPath': 'images/icon_home_active.png'
        },
        {
          'pagePath': 'pages/home',
          // 'pagePath': 'pages/classify',
          'text': '分类',
          'iconPath': 'images/icon_classify.png',
          'selectedIconPath': 'images/icon_classify_active.png'
        },
        {
          'pagePath': 'pages/home',
          // 'pagePath': 'pages/shop_cart',
          'text': '购物车',
          'iconPath': 'images/icon_shop_cart.png',
          'selectedIconPath': 'images/icon_shop_cart_active.png'
        },
        {
          'pagePath': 'pages/home',
          // 'pagePath': 'pages/info',
          'text': '我的',
          'iconPath': 'images/icon_info.png',
          'selectedIconPath': 'images/icon_info_active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null,
    appid: 'wx66ec9b44891facbd',
    secret: '903ac5edac934341d4b593413fe66622'
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
