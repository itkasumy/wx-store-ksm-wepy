<template>
  <view class="top_search">
    <view class="search_read_only">
      <navigator class="search_content" url="/pages/search">
        <i class="iconfont icon-search"></i>
        <view class="search_input">搜索商品</view>
      </navigator>
    </view>
  </view>

  <view class="classify" style="height: {{windowHeight - 50}}rpx">
    <scroll-view class="classify_catetory" scroll-y scroll-with-animation="true" style="height: {{windowHeight - 50}}rpx">
      <view
        class="name {{item.active ? 'active' : ''}}"
        wx:for="{{rootcateList}}"
        wx:key="item"
        @tap="changeCate"
        data-code="{{item.code}}"
      >
        {{item.name}}
      </view>
    </scroll-view>

    <scroll-view class="classify_detail" scroll-y scroll-with-animation="true" style="height: {{windowHeight - 50}}rpx">
      <view class="children">
        <navigator
          url="/pages/search?cateCode={{item.secondCategory.code}}&title={{item.secondCategory.name}}"
          class="children_item"
          hover-class="none"
          wx:for="{{childcateList}}"
          wx:for-item="item"
          wx:key="index"
        >
          <image class="child_image" src="{{item.secondCategory.thumLogo}}"></image>
          <view class="child_name">{{item.secondCategory.name}}</view>
        </navigator>
      </view>
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from '../api'
import { SYSTEM_INFO, SEL_CLASS_CODE } from '../utils/constant'
import tip from '../utils/tip'

export default class Classify extends wepy.page {
  config = {
    navigationBarTitleText: '分类'
  }

  data = {
    scrollTop: 100,
    windowHeight: 0,
    list: {},
    rootcateList: {},
    childcateList: {}
  }

  async getChildCate (rootCateCode) {
    const json = await api.childGoodsCatetoryList({
      query: {
        rootCategoryCode: rootCateCode
      }
    })

    // console.log(json)

    if (json.data.code === '0') {
      this.childcateList = json.data.list
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  async getRootCateTopLevel () {
    const json = await api.rootCtegoryList({
      query: {}
    })

    // console.log(json)

    if (json.data.code === '0') {
      this.rootcateList = json.data.list
      if (this.rootcateList.length > 0) {
        const selCode = wx.getStorageSync(SEL_CLASS_CODE)
        var selRottCateCode = this.rootcateList[0].code
        if (selCode.length === 0) {
          this.rootcateList[0].active = true
        } else {
          for (let i = 0; i < this.rootcateList.length; i++) {
            selRottCateCode = this.rootcateList[i].code
            this.rootcateList[i].active = true
          }
        }
      }
      this.getChildCate(selRottCateCode)
    } else {
      tip.error(json.data.msg)
    }
    this.$apply()
  }

  onLoad () {
    const systemInfo = wx.getStorageSync(SYSTEM_INFO)
    console.log(systemInfo)
    this.windowHeight = systemInfo.windowHeight
    this.$apply()
  }

  onShow () {
    this.getRootCateTopLevel()
  }

  methods = {
    changeCate (e) {
      const code = e.currentTarget.dataset.code
      this.getChildCate(code)
      wepy.setStorageSync(SEL_CLASS_CODE, code)

      for (let i = 0; i < this.rootcateList.length; i++) {
        const rootCate = this.rootcateList[i]
        rootCate.active = false
        if (rootCate.code === code) {
          rootCate.active = true
        }
      }
    },

    onShareAppMessage (res) {
      if (res.from === 'button') {
        console.log(res.target)
      }
      return {
        title: this.detail.name,
        path: '/pages/classify',
        success: res => {}
      }
    }
  }
}
</script>

<style lang="less">
.search_read_only .search_content {
  width: 100%;
}

.classify {
  display: flex;
  position: relative;
  .classify_catetory {
    position: relative;
    width: 200rpx;
    height: 100%;
    z-index: 1;
    .name {
      height: 100rpx;
      line-height: 100rpx;
      text-align: center;
      font-size: 28rpx;
      color: #666666;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .active {
      border-left: 6rpx solid #ff6a3c;
      background: #ffffff;
      color: #ff6a3c;
    }
  }
  .classify_detail {
    position: relative;
    z-index: 999;
    background: #fff;
    padding: 15rpx 10rpx 10rpx 30rpx;
    .title {
      font-size: 30rpx;
      color: #333333;
      margin-left: 25rpx;
    }
    .children {
      display: flex;
      flex-wrap: wrap;
      margin: 20rpx 0;
    }
    .child_image {
      width: 60rpx;
      height: 60rpx;
    }
    .child_name {
      font-size: 26rpx;
      color: #666666;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 170rpx;
    }
    .children_item {
      height: 200rpx;
      width: 170rpx;
      text-align: center;
    }
  }
}
</style>
